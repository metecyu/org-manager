<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:p="http://www.springframework.org/schema/p"  
		xmlns:cache="http://www.springframework.org/schema/cache"
		xmlns:mvc="http://www.springframework.org/schema/mvc"  
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
							http://www.springframework.org/schema/aop 
							http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-3.0.xsd
							http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
							http://www.springframework.org/schema/cache 
							http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
							http://www.springframework.org/schema/mvc  
      						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
							">
	<!-- oracle
		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@192.9.200.107:1521:orcl"/>
		<property name="username" value="org"/>
		<property name="password" value="org"/> 
	</bean> 
	
	-->
	<!-- mysql -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hibernate.dialect.MySQLDialect"/>
		<property name="url" value="jdbc:mysql://localhost:3306/orgdev?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/> 
	</bean> 
<!-- 	<bean id="sessionFactory2" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>加载hibernate自动更新数据库结构
                <prop key="hibernate.show_sql">true</prop> 是否在控制台打印sql
                <prop key="hiberante.format_sql">true</prop>输出格式化后的sql更方便观看
			</props>
		</property>
		<property name="configLocations">
			<list>
				<value>
					classpath*:/hibernate.cfg.xml
				</value>
			</list>
		</property>
	</bean> -->
	
	<bean id="sessionFactory"  
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" /> 
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:ey/org/model</value>
            </list>
        </property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">false</prop><!-- 加载hibernate自动更新数据库结构 -->
                <prop key="hibernate.show_sql">false</prop> <!-- 是否在控制台打印sql -->
                <prop key="hiberante.format_sql">true</prop><!-- 输出格式化后的sql更方便观看 -->
			</props>
		</property>
        </bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- <bean id="transactionBese" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" lazy-init="true" abstract="true">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="add*">REQUIRED</prop>
				<prop key="update*">REQUIRED</prop>
				<prop key="insert*">REQUIRED</prop>
				<prop key="modify*">REQUIRED</prop>
				<prop key="delete*">REQUIRED</prop>
				<prop key="get*">REQUIRED</prop>
				<prop key="save*">REQUIRED</prop>
			</props>
		</property>
	</bean> -->
	
	<!-- ==========事务管理========== -->
	<!-- 配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>	
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>	
			<tx:method name="turn*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="move*" propagation="REQUIRED"/>
			<tx:method name="edit*" propagation="REQUIRED"/>
			<tx:method name="test*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务管理的哪些方法 --> 
	<aop:config>
		<aop:pointcut id="allServiceMethod" expression="execution(* ey.org.service.*.*(..)) or execution(* ey.org.dao.*.*(..)) "/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allServiceMethod"/>
	</aop:config>
	<!-- ========== end 事务管理 ========== -->
	
 	<!-- 注解扫描包 -->
	<context:component-scan base-package="ey.org.dao" />
	<context:component-scan base-package="ey.org.service" />	
	
	<!-- 开启注解 -->
	<mvc:annotation-driven/>
	
	
		<!-- ==========ORG组织管理========== -->
	<bean id="userH" class="ey.orgclient.pub.UserH">
	</bean>
	<bean id="orgH" class="ey.orgclient.pub.OrgH">
	</bean>
	<bean id="roleH" class="ey.orgclient.pub.RoleH">
	</bean>
	<bean id="funcH" class="ey.orgclient.pub.FuncH">
	</bean>
	<!-- -->
	<import resource="classpath:spring-config-cache.xml"/> 
    <import resource="classpath:spring-config-shiro.xml"/>

	    
</beans>
